{"ast":null,"code":"import React,{useState}from'react';// Componente principal de la aplicación\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[selectedFile,setSelectedFile]=useState(null);const[message,setMessage]=useState('');const[fileUploaded,setFileUploaded]=useState(false);// Nuevo estado para controlar si el archivo fue subido\nconst[question,setQuestion]=useState('');// Estado para la pregunta del usuario\nconst[answer,setAnswer]=useState('');// Estado para la respuesta del LLM\nconst[loadingAnswer,setLoadingAnswer]=useState(false);// Estado para indicar que se está cargando la respuesta\n// Maneja la selección de archivo por parte del usuario\nconst handleFileChange=event=>{const file=event.target.files[0];if(file){// Verifica si el archivo es un tipo de Excel válido\nif(file.type==='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'||file.type==='application/vnd.ms-excel'||file.type==='text/csv'){// Agregamos soporte para CSV\nsetSelectedFile(file);setMessage(`Archivo seleccionado: ${file.name}`);setFileUploaded(false);// Reiniciar estado de subida al seleccionar nuevo archivo\nsetAnswer('');// Limpiar respuesta anterior\n}else{setSelectedFile(null);setMessage('Por favor, sube un archivo Excel o CSV válido (.xlsx, .xls o .csv).');setFileUploaded(false);setAnswer('');}}else{setSelectedFile(null);setMessage('');setFileUploaded(false);setAnswer('');}};// Maneja la subida del archivo (aquí se enviará al backend)\nconst handleFileUpload=async()=>{if(!selectedFile){setMessage('Por favor, selecciona un archivo primero.');return;}setMessage('Subiendo archivo...');setLoadingAnswer(true);// Usamos este para el estado de subida también temporalmente\ntry{const formData=new FormData();formData.append('excelFile',selectedFile);// 'excelFile' debe coincidir con el nombre esperado en el backend (request.files['excelFile'])\nconst response=await fetch('http://127.0.0.1:5000/upload',{// URL de tu backend\nmethod:'POST',body:formData});if(response.ok){const data=await response.json();setMessage(`\"${selectedFile.name}\" subido y procesado con éxito. Columnas: ${data.columns.join(', ')}. Filas: ${data.rows_count}`);setFileUploaded(true);// Marcar como subido\nsetAnswer('');// Limpiar respuesta anterior\n}else{const errorData=await response.json();setMessage(`Error al subir el archivo: ${errorData.error}`);setFileUploaded(false);}}catch(error){console.error('Error al subir el archivo:',error);setMessage('Hubo un problema de conexión con el servidor. Asegúrate de que el backend esté corriendo.');setFileUploaded(false);}finally{setLoadingAnswer(false);// Finalizar estado de carga\n}};// Maneja el envío de la pregunta al backend\nconst handleAskQuestion=async()=>{if(!question.trim()){setAnswer('Por favor, escribe una pregunta.');return;}if(!fileUploaded){setAnswer('Por favor, sube un archivo Excel primero para hacer preguntas.');return;}setLoadingAnswer(true);setAnswer('Obteniendo respuesta...');try{const response=await fetch('http://127.0.0.1:5000/ask',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({question:question})});if(response.ok){const data=await response.json();setAnswer(data.answer);}else{const errorData=await response.json();setAnswer(`Error al obtener respuesta: ${errorData.error}`);}}catch(error){console.error('Error al enviar la pregunta:',error);setAnswer('Hubo un problema de conexión al intentar obtener la respuesta.');}finally{setLoadingAnswer(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-100 flex items-center justify-center p-4 font-sans\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-xl shadow-lg w-full max-w-md border border-gray-200\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-extrabold text-gray-800 mb-6 text-center\",children:\"Analizador de Archivos Excel\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6 text-center\",children:\"Sube tu archivo .xlsx, .xls o .csv para empezar a analizar tus datos.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 pb-6 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Seleccionar archivo Excel/CSV:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",type:\"file\",accept:\".xlsx, .xls, .csv\"// Actualizado para aceptar CSV\n,onChange:handleFileChange,className:\"block w-full text-sm text-gray-900\\r file:mr-4 file:py-2 file:px-4\\r file:rounded-full file:border-0\\r file:text-sm file:font-semibold\\r file:bg-blue-50 file:text-blue-700\\r hover:file:bg-blue-100\\r cursor-pointer\\r focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"}),message&&/*#__PURE__*/_jsx(\"p\",{className:`text-sm mt-4 text-center ${fileUploaded?'text-green-600':'text-red-600'}`,children:message}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFileUpload,disabled:!selectedFile||loadingAnswer,className:`w-full mt-4 py-3 px-4 rounded-lg text-white font-semibold\n                        transition duration-300 ease-in-out\n                        ${!selectedFile||loadingAnswer?'bg-gray-400 cursor-not-allowed':'bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2'}`,children:loadingAnswer&&!fileUploaded?'Subiendo...':'Subir y Analizar Archivo'})]}),fileUploaded&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-800 mb-4 text-center\",children:\"Haz una Pregunta sobre los Datos\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"question-input\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Tu pregunta:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"question-input\",className:\"w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 resize-y\",rows:\"3\",placeholder:\"Ej: \\xBFCu\\xE1ntos clientes hay en Bogot\\xE1?\",value:question,onChange:e=>setQuestion(e.target.value),disabled:loadingAnswer})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAskQuestion,disabled:loadingAnswer||!question.trim(),className:`w-full py-3 px-4 rounded-lg text-white font-semibold\n                          transition duration-300 ease-in-out\n                          ${loadingAnswer||!question.trim()?'bg-gray-400 cursor-not-allowed':'bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2'}`,children:loadingAnswer?'Procesando...':'Obtener Respuesta'}),answer&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-blue-800 mb-2\",children:\"Respuesta:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-800 whitespace-pre-wrap\",children:answer})]})]})]})});};export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","selectedFile","setSelectedFile","message","setMessage","fileUploaded","setFileUploaded","question","setQuestion","answer","setAnswer","loadingAnswer","setLoadingAnswer","handleFileChange","event","file","target","files","type","name","handleFileUpload","formData","FormData","append","response","fetch","method","body","ok","data","json","columns","join","rows_count","errorData","error","console","handleAskQuestion","trim","headers","JSON","stringify","className","children","htmlFor","id","accept","onChange","onClick","disabled","rows","placeholder","value","e"],"sources":["C:/Users/mauro/excel-analyser/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Componente principal de la aplicación\r\nconst App = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [fileUploaded, setFileUploaded] = useState(false); // Nuevo estado para controlar si el archivo fue subido\r\n  const [question, setQuestion] = useState(''); // Estado para la pregunta del usuario\r\n  const [answer, setAnswer] = useState(''); // Estado para la respuesta del LLM\r\n  const [loadingAnswer, setLoadingAnswer] = useState(false); // Estado para indicar que se está cargando la respuesta\r\n\r\n  // Maneja la selección de archivo por parte del usuario\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      // Verifica si el archivo es un tipo de Excel válido\r\n      if (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||\r\n          file.type === 'application/vnd.ms-excel' ||\r\n          file.type === 'text/csv') { // Agregamos soporte para CSV\r\n        setSelectedFile(file);\r\n        setMessage(`Archivo seleccionado: ${file.name}`);\r\n        setFileUploaded(false); // Reiniciar estado de subida al seleccionar nuevo archivo\r\n        setAnswer(''); // Limpiar respuesta anterior\r\n      } else {\r\n        setSelectedFile(null);\r\n        setMessage('Por favor, sube un archivo Excel o CSV válido (.xlsx, .xls o .csv).');\r\n        setFileUploaded(false);\r\n        setAnswer('');\r\n      }\r\n    } else {\r\n      setSelectedFile(null);\r\n      setMessage('');\r\n      setFileUploaded(false);\r\n      setAnswer('');\r\n    }\r\n  };\r\n\r\n  // Maneja la subida del archivo (aquí se enviará al backend)\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      setMessage('Por favor, selecciona un archivo primero.');\r\n      return;\r\n    }\r\n\r\n    setMessage('Subiendo archivo...');\r\n    setLoadingAnswer(true); // Usamos este para el estado de subida también temporalmente\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('excelFile', selectedFile); // 'excelFile' debe coincidir con el nombre esperado en el backend (request.files['excelFile'])\r\n\r\n      const response = await fetch('http://127.0.0.1:5000/upload', { // URL de tu backend\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setMessage(`\"${selectedFile.name}\" subido y procesado con éxito. Columnas: ${data.columns.join(', ')}. Filas: ${data.rows_count}`);\r\n        setFileUploaded(true); // Marcar como subido\r\n        setAnswer(''); // Limpiar respuesta anterior\r\n      } else {\r\n        const errorData = await response.json();\r\n        setMessage(`Error al subir el archivo: ${errorData.error}`);\r\n        setFileUploaded(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al subir el archivo:', error);\r\n      setMessage('Hubo un problema de conexión con el servidor. Asegúrate de que el backend esté corriendo.');\r\n      setFileUploaded(false);\r\n    } finally {\r\n      setLoadingAnswer(false); // Finalizar estado de carga\r\n    }\r\n  };\r\n\r\n  // Maneja el envío de la pregunta al backend\r\n  const handleAskQuestion = async () => {\r\n    if (!question.trim()) {\r\n      setAnswer('Por favor, escribe una pregunta.');\r\n      return;\r\n    }\r\n    if (!fileUploaded) {\r\n      setAnswer('Por favor, sube un archivo Excel primero para hacer preguntas.');\r\n      return;\r\n    }\r\n\r\n    setLoadingAnswer(true);\r\n    setAnswer('Obteniendo respuesta...');\r\n\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/ask', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ question: question }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAnswer(data.answer);\r\n      } else {\r\n        const errorData = await response.json();\r\n        setAnswer(`Error al obtener respuesta: ${errorData.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al enviar la pregunta:', error);\r\n      setAnswer('Hubo un problema de conexión al intentar obtener la respuesta.');\r\n    } finally {\r\n      setLoadingAnswer(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center p-4 font-sans\">\r\n      <div className=\"bg-white p-8 rounded-xl shadow-lg w-full max-w-md border border-gray-200\">\r\n        <h1 className=\"text-3xl font-extrabold text-gray-800 mb-6 text-center\">\r\n          Analizador de Archivos Excel\r\n        </h1>\r\n\r\n        <p className=\"text-gray-600 mb-6 text-center\">\r\n          Sube tu archivo .xlsx, .xls o .csv para empezar a analizar tus datos.\r\n        </p>\r\n\r\n        {/* Sección de Subida de Archivos */}\r\n        <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n          <label htmlFor=\"file-upload\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Seleccionar archivo Excel/CSV:\r\n          </label>\r\n          <input\r\n            id=\"file-upload\"\r\n            type=\"file\"\r\n            accept=\".xlsx, .xls, .csv\" // Actualizado para aceptar CSV\r\n            onChange={handleFileChange}\r\n            className=\"block w-full text-sm text-gray-900\r\n                       file:mr-4 file:py-2 file:px-4\r\n                       file:rounded-full file:border-0\r\n                       file:text-sm file:font-semibold\r\n                       file:bg-blue-50 file:text-blue-700\r\n                       hover:file:bg-blue-100\r\n                       cursor-pointer\r\n                       focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n          />\r\n          {message && (\r\n            <p className={`text-sm mt-4 text-center ${fileUploaded ? 'text-green-600' : 'text-red-600'}`}>\r\n              {message}\r\n            </p>\r\n          )}\r\n          <button\r\n            onClick={handleFileUpload}\r\n            disabled={!selectedFile || loadingAnswer}\r\n            className={`w-full mt-4 py-3 px-4 rounded-lg text-white font-semibold\r\n                        transition duration-300 ease-in-out\r\n                        ${(!selectedFile || loadingAnswer)\r\n                          ? 'bg-gray-400 cursor-not-allowed'\r\n                          : 'bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2'\r\n                        }`}\r\n          >\r\n            {loadingAnswer && !fileUploaded ? 'Subiendo...' : 'Subir y Analizar Archivo'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Sección de Preguntas y Respuestas (visible solo después de subir un archivo) */}\r\n        {fileUploaded && (\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">\r\n              Haz una Pregunta sobre los Datos\r\n            </h2>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"question-input\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Tu pregunta:\r\n              </label>\r\n              <textarea\r\n                id=\"question-input\"\r\n                className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500 resize-y\"\r\n                rows=\"3\"\r\n                placeholder=\"Ej: ¿Cuántos clientes hay en Bogotá?\"\r\n                value={question}\r\n                onChange={(e) => setQuestion(e.target.value)}\r\n                disabled={loadingAnswer}\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              onClick={handleAskQuestion}\r\n              disabled={loadingAnswer || !question.trim()}\r\n              className={`w-full py-3 px-4 rounded-lg text-white font-semibold\r\n                          transition duration-300 ease-in-out\r\n                          ${(loadingAnswer || !question.trim())\r\n                            ? 'bg-gray-400 cursor-not-allowed'\r\n                            : 'bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2'\r\n                          }`}\r\n            >\r\n              {loadingAnswer ? 'Procesando...' : 'Obtener Respuesta'}\r\n            </button>\r\n\r\n            {answer && (\r\n              <div className=\"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                <h3 className=\"text-lg font-semibold text-blue-800 mb-2\">Respuesta:</h3>\r\n                <p className=\"text-gray-800 whitespace-pre-wrap\">{answer}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}