{"ast":null,"code":"import React,{useState}from'react';// Componente principal de la aplicación\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[selectedFile,setSelectedFile]=useState(null);const[message,setMessage]=useState('');// Maneja la selección de archivo por parte del usuario\nconst handleFileChange=event=>{const file=event.target.files[0];if(file){// Verifica si el archivo es un tipo de Excel válido\nif(file.type==='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'||file.type==='application/vnd.ms-excel'||file.type==='text/csv'){// Agregamos soporte para CSV\nsetSelectedFile(file);setMessage(`Archivo seleccionado: ${file.name}`);}else{setSelectedFile(null);setMessage('Por favor, sube un archivo Excel o CSV válido (.xlsx, .xls o .csv).');}}else{setSelectedFile(null);setMessage('');}};// Maneja la subida del archivo (aquí se enviará al backend)\nconst handleFileUpload=async()=>{if(!selectedFile){setMessage('Por favor, selecciona un archivo primero.');return;}setMessage('Subiendo archivo...');try{const formData=new FormData();formData.append('excelFile',selectedFile);// 'excelFile' debe coincidir con el nombre esperado en el backend (request.files['excelFile'])\nconst response=await fetch('http://127.0.0.1:5000/upload',{// URL de tu backend\nmethod:'POST',body:formData});if(response.ok){const data=await response.json();setMessage(`\"${selectedFile.name}\" subido y procesado con éxito. Columnas: ${data.columns.join(', ')}. Filas: ${data.rows_count}`);// Aquí podrías guardar el estado de que el archivo fue cargado y listo para preguntas\n}else{const errorData=await response.json();setMessage(`Error al subir el archivo: ${errorData.error}`);}}catch(error){console.error('Error al subir el archivo:',error);setMessage('Hubo un problema de conexión con el servidor. Asegúrate de que el backend esté corriendo.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-100 flex items-center justify-center p-4 font-sans\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-xl shadow-lg w-full max-w-md border border-gray-200\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-extrabold text-gray-800 mb-6 text-center\",children:\"Analizador de Archivos Excel\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6 text-center\",children:\"Sube tu archivo .xlsx, .xls o .csv para empezar a analizar tus datos.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Seleccionar archivo Excel/CSV:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",type:\"file\",accept:\".xlsx, .xls, .csv\"// Actualizado para aceptar CSV\n,onChange:handleFileChange,className:\"block w-full text-sm text-gray-900\\r file:mr-4 file:py-2 file:px-4\\r file:rounded-full file:border-0\\r file:text-sm file:font-semibold\\r file:bg-blue-50 file:text-blue-700\\r hover:file:bg-blue-100\\r cursor-pointer\\r focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{className:`text-sm mb-6 text-center ${selectedFile?'text-green-600':'text-red-600'}`,children:message}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFileUpload,disabled:!selectedFile,className:`w-full py-3 px-4 rounded-lg text-white font-semibold\n                      transition duration-300 ease-in-out\n                      ${selectedFile?'bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2':'bg-gray-400 cursor-not-allowed'}`,children:\"Subir y Analizar Archivo\"})]})});};export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","selectedFile","setSelectedFile","message","setMessage","handleFileChange","event","file","target","files","type","name","handleFileUpload","formData","FormData","append","response","fetch","method","body","ok","data","json","columns","join","rows_count","errorData","error","console","className","children","htmlFor","id","accept","onChange","onClick","disabled"],"sources":["C:/Users/mauro/excel-analyser/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Componente principal de la aplicación\r\nconst App = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Maneja la selección de archivo por parte del usuario\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      // Verifica si el archivo es un tipo de Excel válido\r\n      if (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||\r\n          file.type === 'application/vnd.ms-excel' ||\r\n          file.type === 'text/csv') { // Agregamos soporte para CSV\r\n        setSelectedFile(file);\r\n        setMessage(`Archivo seleccionado: ${file.name}`);\r\n      } else {\r\n        setSelectedFile(null);\r\n        setMessage('Por favor, sube un archivo Excel o CSV válido (.xlsx, .xls o .csv).');\r\n      }\r\n    } else {\r\n      setSelectedFile(null);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  // Maneja la subida del archivo (aquí se enviará al backend)\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      setMessage('Por favor, selecciona un archivo primero.');\r\n      return;\r\n    }\r\n\r\n    setMessage('Subiendo archivo...');\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('excelFile', selectedFile); // 'excelFile' debe coincidir con el nombre esperado en el backend (request.files['excelFile'])\r\n\r\n      const response = await fetch('http://127.0.0.1:5000/upload', { // URL de tu backend\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setMessage(`\"${selectedFile.name}\" subido y procesado con éxito. Columnas: ${data.columns.join(', ')}. Filas: ${data.rows_count}`);\r\n        // Aquí podrías guardar el estado de que el archivo fue cargado y listo para preguntas\r\n      } else {\r\n        const errorData = await response.json();\r\n        setMessage(`Error al subir el archivo: ${errorData.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al subir el archivo:', error);\r\n      setMessage('Hubo un problema de conexión con el servidor. Asegúrate de que el backend esté corriendo.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center p-4 font-sans\">\r\n      <div className=\"bg-white p-8 rounded-xl shadow-lg w-full max-w-md border border-gray-200\">\r\n        <h1 className=\"text-3xl font-extrabold text-gray-800 mb-6 text-center\">\r\n          Analizador de Archivos Excel\r\n        </h1>\r\n\r\n        <p className=\"text-gray-600 mb-6 text-center\">\r\n          Sube tu archivo .xlsx, .xls o .csv para empezar a analizar tus datos.\r\n        </p>\r\n\r\n        <div className=\"mb-6\">\r\n          <label htmlFor=\"file-upload\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Seleccionar archivo Excel/CSV:\r\n          </label>\r\n          <input\r\n            id=\"file-upload\"\r\n            type=\"file\"\r\n            accept=\".xlsx, .xls, .csv\" // Actualizado para aceptar CSV\r\n            onChange={handleFileChange}\r\n            className=\"block w-full text-sm text-gray-900\r\n                       file:mr-4 file:py-2 file:px-4\r\n                       file:rounded-full file:border-0\r\n                       file:text-sm file:font-semibold\r\n                       file:bg-blue-50 file:text-blue-700\r\n                       hover:file:bg-blue-100\r\n                       cursor-pointer\r\n                       focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n          />\r\n        </div>\r\n\r\n        {message && (\r\n          <p className={`text-sm mb-6 text-center ${selectedFile ? 'text-green-600' : 'text-red-600'}`}>\r\n            {message}\r\n          </p>\r\n        )}\r\n\r\n        <button\r\n          onClick={handleFileUpload}\r\n          disabled={!selectedFile}\r\n          className={`w-full py-3 px-4 rounded-lg text-white font-semibold\r\n                      transition duration-300 ease-in-out\r\n                      ${selectedFile\r\n                        ? 'bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2'\r\n                        : 'bg-gray-400 cursor-not-allowed'\r\n                      }`}\r\n        >\r\n          Subir y Analizar Archivo\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}